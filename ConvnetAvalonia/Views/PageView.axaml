<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
             xmlns:AvalonEdit="using:AvaloniaEdit"
             xmlns:vm="clr-namespace:ConvnetAvalonia.PageViewModels"
             xmlns:view="clr-namespace:ConvnetAvalonia.PageViews"
             xmlns:c="clr-namespace:ConvnetAvalonia.Common"
             xmlns:converters="clr-namespace:ConvnetAvalonia.Converters"
             xmlns:props="clr-namespace:ConvnetAvalonia.Properties"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="vm:PageViewModel"
             x:Class="ConvnetAvalonia.PageViews.PageView">

  <UserControl.Resources>
    <ContextMenu x:Key="MyContextMenu">
      <MenuItem Header="_Cut" HotKey="Ctrl+c" Command="{Binding CutCommand}">
        <MenuItem.Icon>
          <actipro:DynamicImage Source="/Resources/Cut.png"/>
        </MenuItem.Icon>
        
      </MenuItem>
      <MenuItem Header="Co_py">
        <MenuItem.Icon>
          <actipro:DynamicImage Source="/Resources/Copy.png"/>
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="_Paste">
        <MenuItem.Icon>
          <actipro:DynamicImage Source="/Resources/Paste.png"/>
        </MenuItem.Icon>
      </MenuItem>
      <Separator />
      <MenuItem Header="Select _All" />
      <Separator />
      <MenuItem Header="_Undo">
        <MenuItem.Icon>
          <actipro:DynamicImage Source="/Resources/Undo.png"/>
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="_Redo">
        <MenuItem.Icon>
          <actipro:DynamicImage Source="/Resources/Redo.png"/>
        </MenuItem.Icon>
      </MenuItem>
    </ContextMenu>
  </UserControl.Resources>
  
  <UserControl.DataTemplates>
    <DataTemplate DataType="{x:Type vm:EditPageViewModel}">
      <view:EditPageView />
    </DataTemplate>
    
    <!--<Style TargetType="{x:Type Image}">
      <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <props:Settings x:Key="Settings"/>-->
  </UserControl.DataTemplates>
   
  <Grid RowDefinitions="Auto,*">
    <!--<ToolBarTray Grid.Row="0" Height="Auto" HorizontalAlignment="Stretch" Name="toolBarTray" VerticalAlignment="Top" Width="Auto" ToolBarTray.IsLocked="False">
      <ToolBar>
        <ComboBox Name="PageViews" Margin="2" MinWidth="50"  ItemsSource="{Binding Path=Pages}" SelectedItem="{Binding Path=CurrentPage}" IsEnabled="{Binding Path=CurrentPage.IsValid, Mode=TwoWay}" UseLayoutRounding="True" IsReadOnly="True" IsTextSearchEnabled="False" IsSynchronizedWithCurrentItem="True" DisplayMemberPath="DisplayName"/>
      </ToolBar>
      <ToolBar Name="CmdToolBar" ItemsSource="{Binding Path=CommandToolBar, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Path=CommandToolBarVisibility}"/>
    </ToolBarTray>-->
    <Border Grid.Row="0">
      <ComboBox Name="PageViews" Margin="2" MinWidth="60" Grid.Row="0" ItemsSource="{Binding Pages}" SelectedItem="{Binding CurrentPage, Mode=TwoWay}" IsEnabled="{Binding CurrentPage.IsValid, Mode=TwoWay}">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Path=DisplayName}"/>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
    </Border>
    
    <Border Grid.Row="1">
      <ContentControl Name="PageContentControl" Content="{Binding CurrentPage, Mode=TwoWay}"/>
    </Border>

    <!--<StatusBar Grid.Row="2" Name="statusBarMain" Width="Auto" Height="23" Background="{StaticResource BackgroundBrushLight}">
      <StatusBarItem HorizontalAlignment="Right" Width="Auto">
        <TextBlock x:Name="SampleRate" Margin="2,0,2,0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Text="{Binding Path=SampleRate}" ToolTip="Sample Rate" Foreground="{StaticResource TextBrush}" />
      </StatusBarItem>
      <StatusBarItem HorizontalAlignment="Left" Width="Auto">
        <TextBlock x:Name="Time" Margin="2,0,2,0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Text="{Binding Path=Duration}" ToolTip="Duration" Foreground="{StaticResource TextBrush}"/>
      </StatusBarItem>
      <StatusBarItem HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch">
        <ProgressBar Margin="0" x:Name="ProgressBar" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{StaticResource BackgroundBrushLight}" BorderBrush="{StaticResource BackgroundBrushLight}" Minimum="{Binding Path=ProgressBarMinimum}" Maximum="{Binding Path=ProgressBarMaximum}" Value="{Binding Path=ProgressBarValue}" SmallChange="1" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsTabStop="False" Width="Auto">
        </ProgressBar>
      </StatusBarItem>
    </StatusBar>-->
  </Grid>
</UserControl>
