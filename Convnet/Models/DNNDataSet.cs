//------------------------------------------------------------------------------
// <auto-generated>
//     Deze code is gegenereerd met een hulpprogramma.
//     Runtime-versie:4.0.30319.42000
//
//     Als u wijzigingen aanbrengt in dit bestand, kan dit onjuist gedrag veroorzaken wanneer
//     de code wordt gegenereerd.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("DNNDataSet")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class DNNDataSet : global::System.Data.DataSet
{

    private TrainingRatesDataTable tableTrainingRates;

    private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public DNNDataSet()
    {
        this.BeginInit();
        this.InitClass();
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        base.Relations.CollectionChanged += schemaChangedHandler;
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected DNNDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
    {
        if ((this.IsBinarySerialized(info, context) == true))
        {
            this.InitVars(false);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler1;
            this.Relations.CollectionChanged += schemaChangedHandler1;
            return;
        }
        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
        if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            if ((ds.Tables["TrainingRates"] != null))
            {
                base.Tables.Add(new TrainingRatesDataTable(ds.Tables["TrainingRates"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
        }
        this.GetSerializationData(info, context);
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        this.Relations.CollectionChanged += schemaChangedHandler;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TrainingRatesDataTable TrainingRates
    {
        get
        {
            return this.tableTrainingRates;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.BrowsableAttribute(true)]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
    public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
    {
        get
        {
            return this._schemaSerializationMode;
        }
        set
        {
            this._schemaSerializationMode = value;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataTableCollection Tables
    {
        get
        {
            return base.Tables;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataRelationCollection Relations
    {
        get
        {
            return base.Relations;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void InitializeDerivedDataSet()
    {
        this.BeginInit();
        this.InitClass();
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public override global::System.Data.DataSet Clone()
    {
        DNNDataSet cln = ((DNNDataSet)(base.Clone()));
        cln.InitVars();
        cln.SchemaSerializationMode = this.SchemaSerializationMode;
        return cln;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeTables()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeRelations()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
    {
        if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            this.Reset();
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TrainingRates"] != null))
            {
                base.Tables.Add(new TrainingRatesDataTable(ds.Tables["TrainingRates"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXml(reader);
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
    {
        global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
        this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
        stream.Position = 0;
        return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars()
    {
        this.InitVars(true);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars(bool initTable)
    {
        this.tableTrainingRates = ((TrainingRatesDataTable)(base.Tables["TrainingRates"]));
        if ((initTable == true))
        {
            if ((this.tableTrainingRates != null))
            {
                this.tableTrainingRates.InitVars();
            }
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void InitClass()
    {
        this.DataSetName = "DNNDataSet";
        this.Prefix = "";
        this.Namespace = "http://tempuri.org/DNNDataSet.xsd";
        this.EnforceConstraints = true;
        this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        this.tableTrainingRates = new TrainingRatesDataTable();
        base.Tables.Add(this.tableTrainingRates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTrainingRates()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
    {
        if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
        {
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
    {
        DNNDataSet ds = new DNNDataSet();
        global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
        global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
        global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
        any.Namespace = ds.Namespace;
        sequence.Items.Add(any);
        type.Particle = sequence;
        global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
        if (xs.Contains(dsSchema.TargetNamespace))
        {
            global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
            global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
            try
            {
                global::System.Xml.Schema.XmlSchema schema = null;
                dsSchema.Write(s1);
                for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                {
                    schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                    s2.SetLength(0);
                    schema.Write(s2);
                    if ((s1.Length == s2.Length))
                    {
                        s1.Position = 0;
                        s2.Position = 0;
                        for (; ((s1.Position != s1.Length)
                                    && (s1.ReadByte() == s2.ReadByte()));)
                        {
                            ;
                        }
                        if ((s1.Position == s1.Length))
                        {
                            return type;
                        }
                    }
                }
            }
            finally
            {
                if ((s1 != null))
                {
                    s1.Close();
                }
                if ((s2 != null))
                {
                    s2.Close();
                }
            }
        }
        xs.Add(dsSchema);
        return type;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TrainingRatesRowChangeEventHandler(object sender, TrainingRatesRowChangeEvent e);

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TrainingRatesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        private global::System.Data.DataColumn columnOptimizer;

        private global::System.Data.DataColumn columnBeta2;

        private global::System.Data.DataColumn columnEps;

        private global::System.Data.DataColumn columnMaximumRate;

        private global::System.Data.DataColumn columnBatchSize;

        private global::System.Data.DataColumn columnCycles;

        private global::System.Data.DataColumn columnEpochs;

        private global::System.Data.DataColumn columnEpochMultiplier;

        private global::System.Data.DataColumn columnMinimumRate;

        private global::System.Data.DataColumn columnFinalRate;

        private global::System.Data.DataColumn columnGamma;

        private global::System.Data.DataColumn columnL2Penalty;

        private global::System.Data.DataColumn columnMomentum;

        private global::System.Data.DataColumn columnDecayFactor;

        private global::System.Data.DataColumn columnDecayAfterEpochs;

        private global::System.Data.DataColumn columnHorizontalFlip;

        private global::System.Data.DataColumn columnVerticalFlip;

        private global::System.Data.DataColumn columnDropout;

        private global::System.Data.DataColumn columnCutout;

        private global::System.Data.DataColumn columnAutoAugment;

        private global::System.Data.DataColumn columnColorCast;

        private global::System.Data.DataColumn columnColorAngle;

        private global::System.Data.DataColumn columnDistortion;

        private global::System.Data.DataColumn columnInterpolation;

        private global::System.Data.DataColumn columnScaling;

        private global::System.Data.DataColumn columnRotation;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesDataTable()
        {
            this.TableName = "TrainingRates";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TrainingRatesDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TrainingRatesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn OptimizerColumn
        {
            get
            {
                return this.columnOptimizer;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Beta2Column
        {
            get
            {
                return this.columnBeta2;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EpsColumn
        {
            get
            {
                return this.columnEps;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MaximumRateColumn
        {
            get
            {
                return this.columnMaximumRate;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BatchSizeColumn
        {
            get
            {
                return this.columnBatchSize;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CyclesColumn
        {
            get
            {
                return this.columnCycles;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EpochsColumn
        {
            get
            {
                return this.columnEpochs;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EpochMultiplierColumn
        {
            get
            {
                return this.columnEpochMultiplier;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MinimumRateColumn
        {
            get
            {
                return this.columnMinimumRate;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FinalRateColumn
        {
            get
            {
                return this.columnFinalRate;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GammaColumn
        {
            get
            {
                return this.columnGamma;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn L2PenaltyColumn
        {
            get
            {
                return this.columnL2Penalty;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MomentumColumn
        {
            get
            {
                return this.columnMomentum;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DecayFactorColumn
        {
            get
            {
                return this.columnDecayFactor;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DecayAfterEpochsColumn
        {
            get
            {
                return this.columnDecayAfterEpochs;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HorizontalFlipColumn
        {
            get
            {
                return this.columnHorizontalFlip;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VerticalFlipColumn
        {
            get
            {
                return this.columnVerticalFlip;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DropoutColumn
        {
            get
            {
                return this.columnDropout;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CutoutColumn
        {
            get
            {
                return this.columnCutout;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AutoAugmentColumn
        {
            get
            {
                return this.columnAutoAugment;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ColorCastColumn
        {
            get
            {
                return this.columnColorCast;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ColorAngleColumn
        {
            get
            {
                return this.columnColorAngle;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DistortionColumn
        {
            get
            {
                return this.columnDistortion;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn InterpolationColumn
        {
            get
            {
                return this.columnInterpolation;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ScalingColumn
        {
            get
            {
                return this.columnScaling;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RotationColumn
        {
            get
            {
                return this.columnRotation;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesRow this[int index]
        {
            get
            {
                return ((TrainingRatesRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TrainingRatesRowChangeEventHandler TrainingRatesRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TrainingRatesRowChangeEventHandler TrainingRatesRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TrainingRatesRowChangeEventHandler TrainingRatesRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TrainingRatesRowChangeEventHandler TrainingRatesRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTrainingRatesRow(TrainingRatesRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesRow AddTrainingRatesRow(
                    int Optimizer,
                    double Beta2,
                    double Eps,
                    double MaximumRate,
                    int BatchSize,
                    int Cycles,
                    int Epochs,
                    int EpochMultiplier,
                    double MinimumRate,
                    double FinalRate,
                    double Gamma,
                    double L2Penalty,
                    double Momentum,
                    double DecayFactor,
                    int DecayAfterEpochs,
                    bool HorizontalFlip,
                    bool VerticalFlip,
                    double Dropout,
                    double Cutout,
                    double AutoAugment,
                    double ColorCast,
                    int ColorAngle,
                    double Distortion,
                    int Interpolation,
                    double Scaling,
                    double Rotation)
        {
            TrainingRatesRow rowTrainingRatesRow = ((TrainingRatesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Optimizer,
                    Beta2,
                    Eps,
                    MaximumRate,
                    BatchSize,
                    Cycles,
                    Epochs,
                    EpochMultiplier,
                    MinimumRate,
                    FinalRate,
                    Gamma,
                    L2Penalty,
                    Momentum,
                    DecayFactor,
                    DecayAfterEpochs,
                    HorizontalFlip,
                    VerticalFlip,
                    Dropout,
                    Cutout,
                    AutoAugment,
                    ColorCast,
                    ColorAngle,
                    Distortion,
                    Interpolation,
                    Scaling,
                    Rotation};
            rowTrainingRatesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTrainingRatesRow);
            return rowTrainingRatesRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            TrainingRatesDataTable cln = ((TrainingRatesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new TrainingRatesDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnOptimizer = base.Columns["Optimizer"];
            this.columnBeta2 = base.Columns["Beta2"];
            this.columnEps = base.Columns["Eps"];
            this.columnMaximumRate = base.Columns["MaximumRate"];
            this.columnBatchSize = base.Columns["BatchSize"];
            this.columnCycles = base.Columns["Cycles"];
            this.columnEpochs = base.Columns["Epochs"];
            this.columnEpochMultiplier = base.Columns["EpochMultiplier"];
            this.columnMinimumRate = base.Columns["MinimumRate"];
            this.columnFinalRate = base.Columns["FinalRate"];
            this.columnGamma = base.Columns["Gamma"];
            this.columnL2Penalty = base.Columns["L2Penalty"];
            this.columnMomentum = base.Columns["Momentum"];
            this.columnDecayFactor = base.Columns["DecayFactor"];
            this.columnDecayAfterEpochs = base.Columns["DecayAfterEpochs"];
            this.columnHorizontalFlip = base.Columns["HorizontalFlip"];
            this.columnVerticalFlip = base.Columns["VerticalFlip"];
            this.columnDropout = base.Columns["Dropout"];
            this.columnCutout = base.Columns["Cutout"];
            this.columnAutoAugment = base.Columns["AutoAugment"];
            this.columnColorCast = base.Columns["ColorCast"];
            this.columnColorAngle = base.Columns["ColorAngle"];
            this.columnDistortion = base.Columns["Distortion"];
            this.columnInterpolation = base.Columns["Interpolation"];
            this.columnScaling = base.Columns["Scaling"];
            this.columnRotation = base.Columns["Rotation"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnOptimizer = new global::System.Data.DataColumn("Optimizer", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnOptimizer);
            this.columnBeta2 = new global::System.Data.DataColumn("Beta2", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBeta2);
            this.columnEps = new global::System.Data.DataColumn("Eps", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEps);
            this.columnMaximumRate = new global::System.Data.DataColumn("MaximumRate", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMaximumRate);
            this.columnBatchSize = new global::System.Data.DataColumn("BatchSize", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnBatchSize);
            this.columnCycles = new global::System.Data.DataColumn("Cycles", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCycles);
            this.columnEpochs = new global::System.Data.DataColumn("Epochs", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEpochs);
            this.columnEpochMultiplier = new global::System.Data.DataColumn("EpochMultiplier", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEpochMultiplier);
            this.columnMinimumRate = new global::System.Data.DataColumn("MinimumRate", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMinimumRate);
            this.columnFinalRate = new global::System.Data.DataColumn("FinalRate", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFinalRate);
            this.columnGamma = new global::System.Data.DataColumn("Gamma", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnGamma);
            this.columnL2Penalty = new global::System.Data.DataColumn("L2Penalty", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnL2Penalty);
            this.columnMomentum = new global::System.Data.DataColumn("Momentum", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMomentum);
            this.columnDecayFactor = new global::System.Data.DataColumn("DecayFactor", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDecayFactor);
            this.columnDecayAfterEpochs = new global::System.Data.DataColumn("DecayAfterEpochs", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDecayAfterEpochs);
            this.columnHorizontalFlip = new global::System.Data.DataColumn("HorizontalFlip", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnHorizontalFlip);
            this.columnVerticalFlip = new global::System.Data.DataColumn("VerticalFlip", typeof(bool), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVerticalFlip);
            this.columnDropout = new global::System.Data.DataColumn("Dropout", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDropout);
            this.columnCutout = new global::System.Data.DataColumn("Cutout", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCutout);
            this.columnAutoAugment = new global::System.Data.DataColumn("AutoAugment", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAutoAugment);
            this.columnColorCast = new global::System.Data.DataColumn("ColorCast", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnColorCast);
            this.columnColorAngle = new global::System.Data.DataColumn("ColorAngle", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnColorAngle);
            this.columnDistortion = new global::System.Data.DataColumn("Distortion", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDistortion);
            this.columnInterpolation = new global::System.Data.DataColumn("Interpolation", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnInterpolation);
            this.columnScaling = new global::System.Data.DataColumn("Scaling", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnScaling);
            this.columnRotation = new global::System.Data.DataColumn("Rotation", typeof(double), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRotation);

            this.columnOptimizer.AllowDBNull = false;
            this.columnOptimizer.DefaultValue = ((int)(0));
            this.columnBeta2.AllowDBNull = false;
            this.columnBeta2.DefaultValue = ((double)(0.999));
            this.columnEps.AllowDBNull = false;
            this.columnEps.DefaultValue = ((double)(0.00001));
            this.columnBatchSize.AllowDBNull = false;
            this.columnBatchSize.DefaultValue = ((int)(8));
            this.columnMaximumRate.AllowDBNull = false;
            this.columnBatchSize.AllowDBNull = false;
            this.columnBatchSize.DefaultValue = ((int)(8));
            this.columnCycles.AllowDBNull = false;
            this.columnCycles.DefaultValue = ((int)(1));
            this.columnEpochs.AllowDBNull = false;
            this.columnEpochMultiplier.AllowDBNull = false;
            this.columnEpochMultiplier.DefaultValue = ((int)(1));
            this.columnMinimumRate.AllowDBNull = false;
            this.columnFinalRate.AllowDBNull = false;
            this.columnGamma.AllowDBNull = false;
            this.columnL2Penalty.AllowDBNull = false;
            this.columnMomentum.AllowDBNull = false;
            this.columnDecayFactor.AllowDBNull = false;
            this.columnDecayAfterEpochs.AllowDBNull = false;
            this.columnHorizontalFlip.AllowDBNull = false;
            this.columnHorizontalFlip.DefaultValue = ((bool)(false));
            this.columnVerticalFlip.AllowDBNull = false;
            this.columnVerticalFlip.DefaultValue = ((bool)(false));
            this.columnDropout.AllowDBNull = false;
            this.columnDropout.DefaultValue = ((double)(0D));
            this.columnCutout.AllowDBNull = false;
            this.columnCutout.DefaultValue = ((double)(0D));
            this.columnAutoAugment.AllowDBNull = false;
            this.columnAutoAugment.DefaultValue = ((double)(0D));
            this.columnColorCast.AllowDBNull = false;
            this.columnColorCast.DefaultValue = ((double)(0));
            this.columnColorAngle.AllowDBNull = false;
            this.columnColorAngle.DefaultValue = ((int)(0));
            this.columnDistortion.AllowDBNull = false;
            this.columnDistortion.DefaultValue = ((double)(0D));
            this.columnInterpolation.AllowDBNull = false;
            this.columnInterpolation.DefaultValue = ((int)(0));
            this.columnScaling.AllowDBNull = false;
            this.columnRotation.AllowDBNull = false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesRow NewTrainingRatesRow()
        {
            return ((TrainingRatesRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new TrainingRatesRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(TrainingRatesRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.TrainingRatesRowChanged != null))
            {
                this.TrainingRatesRowChanged(this, new TrainingRatesRowChangeEvent(((TrainingRatesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.TrainingRatesRowChanging != null))
            {
                this.TrainingRatesRowChanging(this, new TrainingRatesRowChangeEvent(((TrainingRatesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.TrainingRatesRowDeleted != null))
            {
                this.TrainingRatesRowDeleted(this, new TrainingRatesRowChangeEvent(((TrainingRatesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.TrainingRatesRowDeleting != null))
            {
                this.TrainingRatesRowDeleting(this, new TrainingRatesRowChangeEvent(((TrainingRatesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTrainingRatesRow(TrainingRatesRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            DNNDataSet ds = new DNNDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TrainingRatesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TrainingRatesRow : global::System.Data.DataRow
    {

        private TrainingRatesDataTable tableTrainingRates;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TrainingRatesRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableTrainingRates = ((TrainingRatesDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Optimizer
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.OptimizerColumn]));
            }
            set
            {
                this[this.tableTrainingRates.OptimizerColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Beta2
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.Beta2Column]));
            }
            set
            {
                this[this.tableTrainingRates.Beta2Column] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Eps
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.EpsColumn]));
            }
            set
            {
                this[this.tableTrainingRates.EpsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MaximumRate
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.MaximumRateColumn]));
            }
            set
            {
                this[this.tableTrainingRates.MaximumRateColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BatchSize
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.BatchSizeColumn]));
            }
            set
            {
                this[this.tableTrainingRates.BatchSizeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Cycles
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.CyclesColumn]));
            }
            set
            {
                this[this.tableTrainingRates.CyclesColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Epochs
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.EpochsColumn]));
            }
            set
            {
                this[this.tableTrainingRates.EpochsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int EpochMultiplier
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.EpochMultiplierColumn]));
            }
            set
            {
                this[this.tableTrainingRates.EpochMultiplierColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MinimumRate
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.MinimumRateColumn]));
            }
            set
            {
                this[this.tableTrainingRates.MinimumRateColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double FinalRate
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.FinalRateColumn]));
            }
            set
            {
                this[this.tableTrainingRates.FinalRateColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Gamma
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.GammaColumn]));
            }
            set
            {
                this[this.tableTrainingRates.GammaColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double L2Penalty
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.L2PenaltyColumn]));
            }
            set
            {
                this[this.tableTrainingRates.L2PenaltyColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Momentum
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.MomentumColumn]));
            }
            set
            {
                this[this.tableTrainingRates.MomentumColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double DecayFactor
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.DecayFactorColumn]));
            }
            set
            {
                this[this.tableTrainingRates.DecayFactorColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int DecayAfterEpochs
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.DecayAfterEpochsColumn]));
            }
            set
            {
                this[this.tableTrainingRates.DecayAfterEpochsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool HorizontalFlip
        {
            get
            {
                return ((bool)(this[this.tableTrainingRates.HorizontalFlipColumn]));
            }
            set
            {
                this[this.tableTrainingRates.HorizontalFlipColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool VerticalFlip
        {
            get
            {
                return ((bool)(this[this.tableTrainingRates.VerticalFlipColumn]));
            }
            set
            {
                this[this.tableTrainingRates.VerticalFlipColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Dropout
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.DropoutColumn]));
            }
            set
            {
                this[this.tableTrainingRates.DropoutColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Cutout
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.CutoutColumn]));
            }
            set
            {
                this[this.tableTrainingRates.CutoutColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double AutoAugment
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.AutoAugmentColumn]));
            }
            set
            {
                this[this.tableTrainingRates.AutoAugmentColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double ColorCast
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.ColorCastColumn]));
            }
            set
            {
                this[this.tableTrainingRates.ColorCastColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ColorAngle
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.ColorAngleColumn]));
            }
            set
            {
                this[this.tableTrainingRates.ColorAngleColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double Distortion
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.DistortionColumn]));
            }
            set
            {
                this[this.tableTrainingRates.DistortionColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Interpolation
        {
            get
            {
                return ((int)(this[this.tableTrainingRates.InterpolationColumn]));
            }
            set
            {
                this[this.tableTrainingRates.InterpolationColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MaxScaling
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.ScalingColumn]));
            }
            set
            {
                this[this.tableTrainingRates.ScalingColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public double MaxRotation
        {
            get
            {
                return ((double)(this[this.tableTrainingRates.RotationColumn]));
            }
            set
            {
                this[this.tableTrainingRates.RotationColumn] = value;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TrainingRatesRowChangeEvent : global::System.EventArgs
    {

        private TrainingRatesRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesRowChangeEvent(TrainingRatesRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingRatesRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
}
