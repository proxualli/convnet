<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:Convnet.Common"
             xmlns:converters="clr-namespace:Convnet.Converters"
             xmlns:props="clr-namespace:Convnet.Properties"
             xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
             xmlns:oxyshared="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf.Shared" 
             x:Class="Convnet.PageViews.TrainPageView"
             Foreground="White">
           
    <UserControl.Resources >
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <!--<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>-->
        <Color x:Key="SelectedBackgroundColor">#FF222222</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">#FF2E2E2E</Color>
        <Color x:Key="ControlMediumColor">#FF646464</Color>
        <Color x:Key="ControlDarkColor">#FF404040</Color>

        <Color x:Key="ControlMouseOverColor">#FF2E2E2E</Color>
        <Color x:Key="ControlPressedColor">#FF3E3E3E</Color>


        <Color x:Key="GlyphColor">#FF555555</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 1.004391443, 1.002428215, 1.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FF888888</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF888888</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FF2E2E2E</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="#404040" />
                <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="1,0,1,0">
                            <Thumb.BorderBrush>

                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#404040" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1">
                            <Thumb.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanValueInverter x:Key="Inverter" />
        <converters:EnumToStringConverter x:Key="EnumToStringConverter"/>
        <CollectionViewSource x:Key="src" Source="{Binding TrainingLog}">
            <CollectionViewSource.GroupDescriptions>
                <!--<PropertyGroupDescription PropertyName="GroupIndex" />-->
                <PropertyGroupDescription PropertyName="CostName" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <props:Settings x:Key="Settings"/>

        <!--Common colors.-->
        <Color x:Key="TextColor">#FFD7CFD7</Color>
        <Color x:Key="BackgroundColorLight">#FF404040</Color> 
        <Color x:Key="BackgroundColor">#FF323232</Color> 

        <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
        <SolidColorBrush x:Key="BackgroundBrushLight" Color="{StaticResource BackgroundColorLight}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
     
           
        <Style x:Key="KioskCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent" Offset="0.0" />
                                                    <GradientStop Color="Transparent" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent" />
                                                    <GradientStop Color="Transparent" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource TextColor}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Visibility="Collapsed" Width="7" Height="7" x:Name="InderminateMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource TextColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="gridMain" Background="{StaticResource BackgroundBrushLight}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="22"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="StackPanelInfo" Height="Auto" Margin="0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="1" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal" SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Border x:Name="BorderProgress" BorderThickness="1,1,0,1" CornerRadius="3" Margin="1,1,0,1" Padding="2" Visibility="{Binding ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="1" Background="Transparent">
                    <TextBlock x:Name="TextBlockProgress" Margin="4" TextWrapping="NoWrap" SnapsToDevicePixels="True" UseLayoutRounding="True" FontFamily="Consolas" FontSize="14" LineStackingStrategy="BlockLineHeight" c:Attached.FormattedText="{Binding ProgressText}" Foreground="{StaticResource TextBrush}"/>
                </Border>
                <Border x:Name="BorderLayerInfo" BorderThickness="1,1,0,1" CornerRadius="3" Margin="1,1,0,1" Padding="2" Visibility="Visible" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="1" Background="Transparent" >
                    <TextBlock x:Name="TextBlockLayerInfo" Margin="4" TextWrapping="NoWrap" SnapsToDevicePixels="True" UseLayoutRounding="True" FontFamily="Consolas" FontSize="14" LineStackingStrategy="BlockLineHeight" c:Attached.FormattedText="{Binding LayerInfo}" Foreground="{StaticResource TextBrush}"/>
                </Border>
                <Border x:Name="BorderWeightsMinMax" BorderThickness="1,1,0,1" CornerRadius="3" Margin="1,1,0,1" Padding="2" Visibility="{Binding ShowWeights, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="1" Background="Transparent">
                    <TextBlock x:Name="TextBlockWeightsMinMax" Margin="4" TextWrapping="NoWrap" SnapsToDevicePixels="True" UseLayoutRounding="True" FontFamily="Consolas" FontSize="14" LineStackingStrategy="BlockLineHeight" c:Attached.FormattedText="{Binding WeightsMinMax}" Foreground="{StaticResource TextBrush}"/>
                </Border>
                <Border x:Name="BorderInputSnapShot" BorderThickness="1,1,0,1" CornerRadius="3" Margin="1,1,0,1" Padding="2,0,5,2" Visibility="{Binding ShowSample, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="1" Background="Transparent">
                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Orientation="Vertical">
                        <TextBlock x:Name="TextBlockHeader" Text="Input" Width ="Auto" Height="Auto" Margin="3,6,3,3" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Consolas" Foreground="{StaticResource TextBrush}" FontSize="14" FontWeight="Bold"/>
                        <Image Source="{Binding InputSnapshot}" Width="64" Height="64" Margin="12,1,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform" StretchDirection="Both" RenderOptions.BitmapScalingMode="HighQuality"/>
                        <TextBlock x:Name="TextBlockLabel" Text="{Binding Label}" Width ="Auto" Height="Auto" Margin="12,3,3,3" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" Foreground="{StaticResource TextBrush}"/>
                    </StackPanel>
                </Border>
            </StackPanel>
            <Border x:Name="BorderSnapShot" BorderThickness="1,1,0,1" CornerRadius="3" Margin="1,1,0,1" Padding="2" Visibility="{Binding ShowWeightsSnapshot, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Grid.RowSpan="1" MaxHeight="{Binding ActualHeight, ElementName=BorderWeightsMinMax}" >
                <ScrollViewer x:Name="SnapShot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Width="Auto" Height="Auto" PanningMode="Both" PreviewMouseLeftButtonDown="SnapShot_MouseLeftButtonDown" IsHitTestVisible="True">
                    <Image Source="{Binding WeightsSnapshot}" SnapsToDevicePixels="True" UseLayoutRounding="True" MinWidth="{Binding WeightsSnapshotX}" Width="{Binding WeightsSnapshotX}" MinHeight="{Binding WeightsSnapshotY}" Height="{Binding WeightsSnapshotY}" RenderOptions.BitmapScalingMode="NearestNeighbor" PreviewMouseLeftButtonDown="SnapShot_MouseLeftButtonDown" IsHitTestVisible="True" />
                </ScrollViewer>
            </Border>
            <Border x:Name="BorderTrainingPlot" BorderThickness="1" CornerRadius="3" Margin="1,1,1,1" Padding="2" Visibility="{Binding ShowTrainingPlot, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Grid.RowSpan="1" MaxHeight="{Binding ActualHeight, ElementName=BorderWeightsMinMax}" Background="{StaticResource BackgroundBrushLight}">
                <oxy:PlotView x:Name="TrainingPlot" Model="{Binding PlotModel, Mode=TwoWay}" MouseLeftButtonDown="TrainingPlot_MouseLeftButtonDown" Background="{StaticResource BackgroundBrushLight}">
                    <oxy:PlotView.DefaultTrackerTemplate>
                        <ControlTemplate>
                            <oxyshared:TrackerControl Position="{Binding Position}" LineExtents="{Binding PlotModel.PlotArea}" Background="{StaticResource BackgroundBrushLight}" BorderBrush="Transparent">
                                <oxyshared:TrackerControl.Content>
                                    <UniformGrid Columns="2" Canvas.Left="{Binding Position.X}" Canvas.Top="{Binding Position.Y}" Margin="3">
                                        <TextBlock Text="{Binding DataPoint.X, StringFormat='{}{0:0}'}"/>
                                        <TextBlock Text="Epochs" FontWeight="DemiBold" />
                                        <TextBlock Text="{Binding DataPoint.Y, StringFormat='{}{0:0.000}'}"/>
                                        <TextBlock Text="{Binding Series.Title}" FontWeight="DemiBold"/>
                                    </UniformGrid>
                                </oxyshared:TrackerControl.Content>
                            </oxyshared:TrackerControl>
                        </ControlTemplate>
                    </oxy:PlotView.DefaultTrackerTemplate>
                </oxy:PlotView>
            </Border>
        </Grid>

        <ScrollViewer Grid.Row="1" x:Name="ScrollViewerHeader" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" BorderThickness="1" BorderBrush="DarkGray" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" CanContentScroll="True" Focusable="False" IsHitTestVisible="False">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=cycle}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=epoch}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=optimizer}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=rate}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=eps}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=momentum}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=beta2}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=gamma}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=l2Penalty}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=dropout}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=batchSize}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=height}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=width}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=inputDropout}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=cutout}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=cutMix}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=autoaugment}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=hflip}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=vflip}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=colorCast}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=colorAngle}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=distortion}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=interpolation}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=scaling}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=rotation}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=avgTrainLoss}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=trainErrors}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=trainErrorPercentage}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=trainAccuracy}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=avgTestLoss}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=testErrors}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=testErrorPercentage}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=testAccuracy}" />
                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=duration}" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="5" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  BorderThickness="1,1,0,0" BorderBrush="{StaticResource TextBrush}" Margin="1,0,-1,0" Background="{StaticResource BackgroundBrush}">
                    <TextBlock Text="Regularization" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource TextBrush}" FontFamily="Consolas" FontSize="14" />
                </Border>

                <Border Grid.Column="10" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  BorderThickness="1,1,0,0" BorderBrush="{StaticResource TextBrush}" Margin="1,0,-1,0" Background="{StaticResource BackgroundBrush}">
                    <TextBlock Text="Resolution" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource TextBrush}" FontFamily="Consolas" FontSize="14" />
                </Border>

                <Border Grid.Column="13" Grid.ColumnSpan="12" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  BorderThickness="1,1,0,0" BorderBrush="{StaticResource TextBrush}" Margin="1,0,-1,0" Background="{StaticResource BackgroundBrush}">
                    <TextBlock Text="Augmentation" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource TextBrush}" FontFamily="Consolas" FontSize="14" />
                </Border>
                <Border Grid.Column="25" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  BorderThickness="1,1,0,0" BorderBrush="{StaticResource TextBrush}" Margin="1,0,-1,0" Background="{StaticResource BackgroundBrush}">
                    <TextBlock Text="Train" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource TextBrush}" FontFamily="Consolas" FontSize="14" />
                </Border>
                <Border Grid.Column="29" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  BorderThickness="1,1,1,0" BorderBrush="{StaticResource TextBrush}" Margin="1,0,-1,0" Background="{StaticResource BackgroundBrush}">
                    <TextBlock Text="Test" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource TextBrush}" FontFamily="Consolas" FontSize="14" />
                </Border>
            </Grid>
        </ScrollViewer>

        <ListView Grid.Row="2" Foreground="{StaticResource TextBrush}" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource DisabledBorderBrush}" Margin="0" Height="Auto" HorizontalAlignment="Stretch" x:Name="listViewTrainingResult" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="Auto" IsSynchronizedWithCurrentItem="True" SelectedIndex="{Binding SelectedIndex}" ItemsSource="{Binding Source={StaticResource src}}" SelectionMode="Single" UseLayoutRounding="True" IsEnabled="True" Grid.ColumnSpan="1" FontFamily="Consolas" FontSize="13" IsTextSearchEnabled="False" TextOptions.TextFormattingMode="Display" KeyDown="ListViewTrainingResult_KeyDown" BorderThickness="0" ScrollViewer.ScrollChanged="ListViewTrainingResult_ScrollChanged" SelectionChanged="ListViewTrainingResult_SelectionChanged" LayoutUpdated="ListViewTrainingResult_LayoutUpdated">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Resources>
                        <LinearGradientBrush x:Key="ListItemHoverFill" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="{StaticResource BackgroundColor}" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Style.Resources>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver" />
                                            <VisualState x:Name="Disabled" />
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected" />
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SelectedUnfocused">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource ListItemHoverFill}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                         </Setter.Value>
                    </Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView RenderOptions.ClearTypeHint="Enabled" Selector.IsSelected="True" AllowsColumnReorder="False">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                        <Border BorderThickness="1,1,0,1" BorderBrush="{StaticResource TextBrush}" Background="{StaticResource BackgroundBrush}">
                                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Width="Auto" Height="17" TextAlignment="Center" Foreground="{StaticResource TextBrush}" Visibility="Visible"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource TextBrush}"/>
                                    <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>

                    <GridViewColumn x:Name="cycle" Header="Cycle" Width="48">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Cycle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="epoch" Header="Epoch" Width="48">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Epoch}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="optimizer" Header="Optimizer" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Optimizer, Converter={StaticResource EnumToStringConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>                                
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="rate" Header="Rate" Width="98">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Rate, StringFormat=#0.00000000}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="eps" Header="Eps" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Eps, StringFormat=G}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="momentum" Header="Momentum" Width="74">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Momentum, StringFormat=0.#######}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="beta2" Header="Beta2" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Beta2, StringFormat=0.#########}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="gamma" Header="Gamma" Width="62">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Gamma, StringFormat=0.#########}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="l2Penalty" Header="L2 Penalty" Width="82">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding L2Penalty, StringFormat=0.#########}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="dropout" Header="Dropout" Width="66">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Dropout, StringFormat=0.#######}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="batchSize" Header="Batch Size" Width="84">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding BatchSize, StringFormat=0.##}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="height" Header="Height" Width="58">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Height, StringFormat=0.##}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="width" Header="Width" Width="56">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Width, StringFormat=0.##}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="inputDropout" Header="Input Dropout" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding InputDropout, StringFormat=0.#######}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="cutout" Header="Cutout" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Cutout, StringFormat=0.#####}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="cutMix" Header="CutMix" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" HorizontalContentAlignment="Center" FontSize="14" IsChecked="{Binding CutMix}" Foreground="White" Background="Transparent" BorderBrush="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}" IsThreeState="False" IsHitTestVisible="False" Style="{Binding Mode=OneWay, Source={StaticResource KioskCheckBox}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="autoaugment" Header="Auto Augment" Width="96">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AutoAugment, StringFormat=0.#####}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="hflip" Header="Horz.Flip" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox  HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" HorizontalContentAlignment="Center" FontSize="14" Foreground="White" Background="Transparent" BorderBrush="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}" IsChecked="{Binding HorizontalFlip}" IsThreeState="False" IsHitTestVisible="False" Style="{Binding Mode=OneWay, Source={StaticResource KioskCheckBox}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="vflip" Header="Vert.Flip" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" HorizontalContentAlignment="Center" FontSize="14" Foreground="White" Background="Transparent" BorderBrush="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}" IsChecked="{Binding VerticalFlip}" IsThreeState="False" IsHitTestVisible="False" Style="{Binding Mode=OneWay, Source={StaticResource KioskCheckBox}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="colorCast" Header="Color Cast" Width="84">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ColorCast, StringFormat=0.#####}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="colorAngle" Header="Color Angle" Width="90">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ColorAngle, StringFormat={}{0}°}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="distortion" Header="Distortion" Width="84">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Distortion, StringFormat=0.#####}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="interpolation" Header="Interpolation" Width="108">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Interpolation, Converter={StaticResource EnumToStringConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>                                
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="scaling" Header="Scaling" Width="64">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Scaling, StringFormat={}{0} %}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="rotation" Header="Rotation" Width="70">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Rotation, StringFormat={}{0}°}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn x:Name="avgTrainLoss" Header="Loss" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AvgTrainLoss, StringFormat=#0.000000}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="trainErrors" Header="Errors" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TrainErrors}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="trainErrorPercentage" Header="Error" Width="70">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TrainErrorPercentage, StringFormat=\{0:#0.00\} %}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="trainAccuracy" Header="Accuracy" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TrainAccuracy, StringFormat=\{0:#0.00\} %}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="avgTestLoss" Header="Loss" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AvgTestLoss, StringFormat=#0.000000}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="testErrors" Header="Errors" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TestErrors}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="testErrorPercentage" Header="Error" Width="70">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TestErrorPercentage, StringFormat=\{0:#0.00\} %}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="testAccuracy" Header="Accuracy" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TestAccuracy, StringFormat=\{0:#0.00\} %}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="duration" Header="Duration" Width="76">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ElapsedTime, StringFormat=\{0:hh\}:\{0:mm\}:\{0:ss\}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" FontFamily="Consolas" FontSize="14"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>

            <ListView.GroupStyle>
                <!--<GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" Margin="3">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding Items}">
                                                    <TextBlock Text="{Binding GroupIndex}" Foreground="Black" FontSize="14" Margin="3"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>-->
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" Margin="3">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding Items}">
                                                    <TextBlock Text="{Binding CostName}" Foreground="{StaticResource TextBrush}" FontSize="14" Margin="3"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>
    </Grid>
</UserControl>